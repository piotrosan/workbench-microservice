"""initial

Revision ID: d6247a6cd0fa
Revises: 
Create Date: 2025-09-15 04:43:34.741071

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd6247a6cd0fa'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('initiative_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workbench_user_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('workbench_user_profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('initiative',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('custom_notes', sa.TEXT(), nullable=True),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['initiative_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workbench_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hash_identifier', sa.String(length=255), nullable=False),
    sa.Column('user_profile_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_profile_id'], ['workbench_user_profile.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hash_identifier')
    )
    op.create_table('workbench_user_group_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_group_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_group_id'], ['workbench_user_groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_group_id', 'name', name='unique_name_role_user_group')
    )
    op.create_table('association_table_user_initiative',
    sa.Column('initiative_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['initiative_id'], ['initiative.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['workbench_user.id'], ),
    sa.PrimaryKeyConstraint('initiative_id', 'user_id')
    )
    op.create_table('association_user_group_user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_group_id', sa.Integer(), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_group_id'], ['workbench_user_groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['workbench_user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'user_group_id')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('priority', sa.DateTime(), nullable=True),
    sa.Column('start_at', sa.DateTime(), nullable=True),
    sa.Column('end_at', sa.DateTime(), nullable=True),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('initiative_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['initiative_id'], ['initiative.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('association_table_user_task',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['workbench_user.id'], ),
    sa.PrimaryKeyConstraint('task_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('association_table_user_task')
    op.drop_table('task')
    op.drop_table('association_user_group_user')
    op.drop_table('association_table_user_initiative')
    op.drop_table('workbench_user_group_roles')
    op.drop_table('workbench_user')
    op.drop_table('initiative')
    op.drop_table('workbench_user_profile')
    op.drop_table('workbench_user_groups')
    op.drop_table('initiative_type')
    # ### end Alembic commands ###
